<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-02T17:29:35 IST" name="Default suite" finished-at="2024-04-02T17:29:42 IST" duration-ms="7502">
    <groups>
    </groups>
    <test started-at="2024-04-02T17:29:35 IST" name="Default test" finished-at="2024-04-02T17:29:42 IST" duration-ms="7502">
      <class name="com.employeeapi.testcase.TC001_Get_All_Employees">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:35 IST" name="setUp" finished-at="2024-04-02T17:29:35 IST" duration-ms="83" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="getAllEmployees()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:35 IST" name="getAllEmployees" finished-at="2024-04-02T17:29:42 IST" duration-ms="7331" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getAllEmployees -->
        <test-method signature="checkContentEncoding()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkContentEncoding" finished-at="2024-04-02T17:29:42 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentEncoding -->
        <test-method signature="checkContentLength()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkContentLength" finished-at="2024-04-02T17:29:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentLength -->
        <test-method signature="checkContentType()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkContentType" finished-at="2024-04-02T17:29:42 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkContentType -->
        <test-method signature="checkResponseTime()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkResponseTime" finished-at="2024-04-02T17:29:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseTime -->
        <test-method signature="checkResposeBody()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkResposeBody" finished-at="2024-04-02T17:29:42 IST" duration-ms="16" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResposeBody -->
        <test-method signature="checkServerType()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkServerType" finished-at="2024-04-02T17:29:42 IST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [nginx/1.21.6] but found [Apache]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [nginx/1.21.6] but found [Apache]
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1577)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.employeeapi.testcase.TC001_Get_All_Employees.checkServerType(TC001_Get_All_Employees.java:101)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:969)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkServerType -->
        <test-method signature="checkStatusCode()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkStatusCode" finished-at="2024-04-02T17:29:42 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusCode -->
        <test-method signature="checkStatusLine()[pri:0, instance:com.employeeapi.testcase.TC001_Get_All_Employees@537f60bf]" started-at="2024-04-02T17:29:42 IST" name="checkStatusLine" finished-at="2024-04-02T17:29:42 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkStatusLine -->
      </class> <!-- com.employeeapi.testcase.TC001_Get_All_Employees -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
